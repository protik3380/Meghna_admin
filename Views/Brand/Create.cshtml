@model EFreshStore.Models.Context.Brand

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link href="~/Content/css/jquery-ui.min.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="~/Content/css/form-design.css"/>
    @*<link href="~/Content/SmartAdmin/css/your_style.css" rel="stylesheet" />*@
</head>
    <div class="container">
        <div class="form-horizontal" id="div1">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", id = "AddBrandForm" }))
            {
                @Html.AntiForgeryToken()
            <div class='@TempData["Class"]' id="flashMessage" role="alert">@TempData["Message"]</div>
                <div class="form-horizontal">
                    <h2>Add Brand</h2>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name,"Brand", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Name, new { placeholder = "Enter brand" })
                            <br/>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description,"Description", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Description, new { placeholder = "Enter description" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageLocation,"Image", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model=> model.ImageLocation, new { type = "file", @class="UploadFile"})
                            @Html.ValidationMessageFor(model => model.ImageLocation, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
            <div style="margin-left: 50px;">
                @Html.ActionLink("Back to List", "Index","", htmlAttributes: new { @class = "backLink" })
            </div>
        </div>
    </div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        $(document).ready(function() {
            $(function () {
                setTimeout(function () {
                    $("#flashMessage").hide('blind', {}, 500);
                }, 5000);
            });
        });

        $(".UploadFile").change(function () {
            if (this.files[0].size > 2097152) {
                alert("File is too big!");
                this.value = "";
            };
        });
    </script>
}
